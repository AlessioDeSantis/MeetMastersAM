@using MeetMastersAM.Shared.Model
@using BlazorBootstrap
@inject HttpClient Client
@inject NavigationManager Navigation


<nav class="navbar navbar-expand-lg bg-water text-light shadow" @onclick="ToggleNavMenu">
    <div class="container-fluid">
        <a class="navbar-brand" href=""><img class="logo" src="image/Logo_biancoMM.png" /></a>
        <button class="navbar-toggler" @onclick="ToggleNavMenu" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <div class="mx-auto">
                        <i class="fa-solid fa-home"></i> Home
                    </div>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="dipendentilista">
                    <div class="mx-auto">
                        <i class="fa-solid fa-plus"></i> Dipendenti
                    </div>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <Dropdown>
                    <DropdownToggleButton>Sedi</DropdownToggleButton>
                    <DropdownMenu>

                        @foreach (var item in _sedi!)
                        {
                            <DropdownItem @onclick="() => VisualizzaSede(item.SedeId)">
                                @item.DescrizioneSede 
                            </DropdownItem>
                        }
                        <hr />
                        <DropdownItem To="aggiungiSede" Type="BlazorBootstrap.ButtonType.Link">Aggiungi Sede</DropdownItem>
                    </DropdownMenu>
                </Dropdown>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="creaoggetti">
                    <div class="mx-auto">
                        <i class="fa-solid fa-gears"></i> Crea Oggetti
                    </div>
                </NavLink>
            </div>
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="candidatiLista">
                    <div class="mx-auto">
                        <i class="fa-solid fa-user-graduate"></i> Candidati
                    </div>
                </NavLink>
            </div>
        </div>
    </div>
</nav>

@code {
    private bool collapseNavMenu = true;

    private List<Sedi>? _sedi = new();

    private Sedi? Sede = new();

    private List<Sedi>? listaSedi { get; set; } = new List<Sedi>();

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await GetSedi();
    }

    public async Task GetSedi()
    {
        _sedi = await Client.GetFromJsonAsync<List<Sedi>>("api/sedi/lista");
    }

    public async Task<Sedi> GetSediId(int id)
    {
        var result = await Client.GetFromJsonAsync<Sedi>($"api/Sedi/{id}");
        return result ?? new Sedi();

    }

    public async Task VisualizzaSede(int id)
    {
        Sede = await GetSediId(id);
        var url = $"visualizzaSede/{id}";
        Navigation.NavigateTo(url);
    }

    public async Task ModificaSediAsync(int id)
    {
        Sede = await GetSediId(id);
    }


}
